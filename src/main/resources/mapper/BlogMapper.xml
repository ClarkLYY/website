<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.clarklyy.website.repository.mapper.BlogMapper">
  <resultMap id="BaseResultMap" type="com.clarklyy.website.domain.entity.Blog">
    <id column="blog_id" jdbcType="INTEGER" property="blogId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="flag" jdbcType="VARCHAR" property="flag" />
    <result column="views" jdbcType="INTEGER" property="views" />
    <result column="appreciation" jdbcType="BIT" property="appreciation" />
    <result column="share_statement" jdbcType="VARCHAR" property="shareStatement" />
    <result column="commented" jdbcType="BIT" property="commented" />
    <result column="published" jdbcType="BIT" property="published" />
    <result column="recommend" jdbcType="BIT" property="recommend" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type_id" jdbcType="INTEGER" property="typeId" />
    <result column="first_picture" jdbcType="VARCHAR" property="firstPicture" />
    <result column="thumbs" jdbcType="INTEGER" property="thumbs" />
    <result column="content" jdbcType="LONGVARCHAR" property="content" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.clarklyy.website.domain.vo.BlogVo">
    <result column="type_name" jdbcType="VARCHAR" property="typeName" />
    <result column="avatar" jdbcType="VARCHAR" property="avatar" />
    <result column="user_nickname" jdbcType="VARCHAR" property="nickname" />
  </resultMap>
  <sql id="Base_Column_List">
    blog_id, user_id, title, description, flag, views, appreciation, share_statement, 
    commented, published, recommend, created, updated, status, type_id,
    first_picture, thumbs
  </sql>
  <sql id="Blob_Column_List">
    content
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    SELECT b.blog_id, b.user_id,b.type_id, u.user_nickname, u.avatar, t.type_name, b.views, b.description, b.created ,
          b.recommend, b.flag, b.updated, b.title, b.first_picture, b.thumbs, b.content, b.appreciation,
          b.share_statement, b.commented, b.published, b.status
        FROM table_blog b, table_user u, table_type t
    WHERE b.user_id = u.user_id AND b.type_id = t.type_id
    and b.blog_id = #{blogId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from table_blog
    where blog_id = #{blogId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="blogId"  keyColumn="blog_id"
          parameterType="com.clarklyy.website.domain.entity.Blog">
    insert into table_blog (blog_id, user_id, title, 
      description, flag, views, 
      appreciation, share_statement, commented, 
      published, recommend, created, 
      updated, status, type_id, 
      first_picture, thumbs, content
      )
    values (#{blogId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{description,jdbcType=VARCHAR}, #{flag,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, 
      #{appreciation,jdbcType=BIT}, #{shareStatement,jdbcType=VARCHAR}, #{commented,jdbcType=BIT},
      #{published,jdbcType=BIT}, #{recommend,jdbcType=BIT}, #{created,jdbcType=TIMESTAMP}, 
      #{updated,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, #{typeId,jdbcType=INTEGER}, 
      #{firstPicture,jdbcType=VARCHAR},
      #{thumbs,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>

  <update id="updateByPrimary" parameterType="com.clarklyy.website.domain.entity.Blog">
    update table_blog
    set user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      appreciation = #{appreciation,jdbcType=BIT},
      share_statement = #{shareStatement,jdbcType=VARCHAR},
      commented = #{commented,jdbcType=BIT},
      published = #{published,jdbcType=BIT},
      recommend = #{recommend,jdbcType=BIT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      first_picture = #{firstPicture,jdbcType=VARCHAR},
      thumbs = #{thumbs,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where blog_id = #{blogId,jdbcType=INTEGER}
  </update>

  <select id="selectAllBlog"  resultMap="ResultMapWithBLOBs">
    SELECT b.blog_id, b.user_id,b.type_id, u.user_nickname, u.avatar, t.type_name, b.views, b.description, b.created ,
          b.recommend, b.flag, b.updated, b.title, b.first_picture, b.thumbs, b.content, b.appreciation,
          b.share_statement, b.commented, b.published, b.status
        FROM table_blog b, table_user u, table_type t
    WHERE b.user_id = u.user_id AND b.type_id = t.type_id
  </select>

  <select id="selectByTypeId" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    SELECT b.blog_id, b.user_id,b.type_id, u.user_nickname, u.avatar, t.type_name, b.views, b.description, b.created ,
          b.recommend, b.flag, b.updated, b.title, b.first_picture, b.thumbs, b.content, b.appreciation,
          b.share_statement, b.commented, b.published, b.status
        FROM table_blog b, table_user u, table_type t
    WHERE
    b.user_id = u.user_id
    AND b.type_id = t.type_id
    and b.type_id = #{typeId,jdbcType=INTEGER}
  </select>
</mapper>